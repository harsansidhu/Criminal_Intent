package com.bignerdranch.android.criminalintent;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONTokener;

import android.content.Context;

public class CriminalIntentJSONSerializer {

	private Context mContext;
	private String mFileName;

	// Constructor takes a Context and a String allows this code to be used 
	// In several other places rather than just for CrimeListFragment 
	public CriminalIntentJSONSerializer (Context c, String f) {
		mContext = c; 
		mFileName = f; 
	}
	
	// reads from the JSON object, parses the data and stores it in an array of crimes
	public ArrayList<Crime> loadCrimes() throws IOException, JSONException {
		ArrayList<Crime> crimes = new ArrayList<Crime>(); 
		BufferedReader reader = null; 
		
		try {
			// Open and read the file into a StringBuilder
			InputStream in = mContext.openFileInput(mFileName);
			reader = new BufferedReader(new InputStreamReader(in));
			StringBuilder jsonString = new StringBuilder(); 
			String line = null; // Initialize a line variable to be parsed  
			while ((line = reader.readLine()) != null) {
				// Line breaks are omitted and irrelevant 
				jsonString.append(line);
			}
			// Parse the JSON using JSONTokener
			JSONArray array = (JSONArray) new JSONTokener(jsonString.toString())
			.nextValue(); 
		}
	}

	// Save the Array of Crimes into a JSON Array, 
	public void saveCrimes(ArrayList<Crime> crimes) 
			throws JSONException, IOException {
		// Build an array in JSON
		JSONArray array = new JSONArray(); 
		for(Crime c: crimes) 
			array.put(c.toJSON());

		// Write the file to disk 
		Writer writer = null;
		try {
			OutputStream out = mContext
					.openFileOutput(mFileName, Context.MODE_PRIVATE);
			writer = new OutputStreamWriter(out);
			writer.write(array.toString());
		} finally {
			if (writer != null);
			writer.close();
		}
	}

}
